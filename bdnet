cat > bin/bdnet << 'EOF'
#!/data/data/com.termux/files/usr/bin/bash

# BD Network Diagnostics Pro
# Professional Network Analysis Tool

echo ""
echo "🌐 BD Network Diagnostics Pro"
echo "============================="

# Internet Connectivity (No error if fails)
echo "📡 INTERNET CONNECTIVITY"
echo "========================"
if ping -c 2 -W 1 8.8.8.8 >/dev/null 2>&1; then
    echo "Status:   ✅ Connected"
    
    # Get public IP (silent if fails)
    public_ip=$(curl -s --connect-timeout 3 https://api.ipify.org 2>/dev/null)
    if [ -n "$public_ip" ]; then
        echo "Public IP: $public_ip"
    else
        echo "Public IP: Not available"
    fi
else
    echo "Status:   ❌ Disconnected"
fi

# DNS Resolution (No error if fails)
echo ""
echo "🔍 DNS RESOLUTION"
echo "================="
if nslookup google.com >/dev/null 2>&1; then
    echo "DNS:      ✅ Working"
else
    echo "DNS:      ❌ Failed"
fi

# Local Network (No error if fails)
echo ""
echo "🏠 LOCAL NETWORK"
echo "================"
local_ip=$(ip route get 1 2>/dev/null | awk '{print $7}' | head -1)
if [ -n "$local_ip" ] && [ "$local_ip" != "dev" ]; then
    echo "Local IP: $local_ip"
else
    echo "Local IP: Not available"
fi

# Network Interfaces (No error if fails)
echo ""
echo "🔌 NETWORK INTERFACES"
echo "====================="
if command -v ifconfig >/dev/null 2>&1; then
    ifconfig | grep -E "^[a-z]" | cut -d: -f1 | head -3 | while read -r interface; do
        echo "Interface: $interface"
    done
else
    echo "Network interfaces: Not available"
fi

echo ""
echo "✅ Network diagnostics completed"
echo "💡 BD Termux Tools Pro - By Masum Vai"
EOF

chmod +x bin/bdnet
