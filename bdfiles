#!/data/data/com.termux/files/usr/bin/bash
# bdfiles - Bangladeshi File Manager

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

show_help() {
    echo -e "${CYAN}"
    echo "╔══════════════════════════════════╗"
    echo "║        🇧🇩 BD FILE MANAGER      ║"
    echo "║      Created by Masum Vai       ║"
    echo "╚══════════════════════════════════╝"
    echo -e "${NC}"
    echo -e "${YELLOW}Usage:${NC}"
    echo "  bdfiles list [dir]         - List directory"
    echo "  bdfiles size <file>        - Show file size"
    echo "  bdfiles find <pattern>     - Find files"
    echo "  bdfiles copy <src> <dest>  - Copy files"
    echo "  bdfiles move <src> <dest>  - Move files"
    echo "  bdfiles delete <file>      - Delete file"
    echo "  bdfiles mkdir <name>       - Create directory"
    echo "  bdfiles tree [dir]         - Show tree view"
}

list_directory() {
    local dir=${1:-.}
    if [ ! -d "$dir" ]; then
        echo -e "${RED}❌ Directory not found: $dir${NC}"
        return 1
    fi
    
    echo -e "${BLUE}📁 Contents of $dir:${NC}"
    echo -e "${YELLOW}Permissions\tSize\tLast Modified\tName${NC}"
    echo -e "${YELLOW}══════════════════════════════════════════════════════════${NC}"
    
    ls -la "$dir" | tail -n +2 | while read line; do
        if [ -n "$line" ]; then
            perm=$(echo "$line" | awk '{print $1}')
            size=$(echo "$line" | awk '{print $5}')
            date=$(echo "$line" | awk '{print $6 " " $7 " " $8}')
            name=$(echo "$line" | awk '{for(i=9;i<=NF;i++) printf $i " "; print ""}')
            
            # Color coding
            if [ "${perm:0:1}" = "d" ]; then
                echo -e "${BLUE}$perm\t$size\t$date\t$name${NC}"
            elif [ "${perm:0:1}" = "l" ]; then
                echo -e "${CYAN}$perm\t$size\t$date\t$name${NC}"
            elif [ "${perm:3:1}" = "x" ]; then
                echo -e "${GREEN}$perm\t$size\t$date\t$name${NC}"
            else
                echo -e "$perm\t$size\t$date\t$name"
            fi
        fi
    done
    
    # Show summary
    total_files=$(ls -1 "$dir" | wc -l)
    total_dirs=$(find "$dir" -maxdepth 1 -type d | wc -l)
    total_dirs=$((total_dirs - 1))
    
    echo -e "${YELLOW}══════════════════════════════════════════════════════════${NC}"
    echo -e "${GREEN}📊 Summary: $total_files files, $total_dirs directories${NC}"
}

get_file_size() {
    if [ -z "$1" ]; then
        echo -e "${RED}❌ File name required${NC}"
        return 1
    fi
    
    if [ -f "$1" ]; then
        size=$(du -h "$1" | awk '{print $1}')
        lines=$(wc -l "$1" 2>/dev/null | awk '{print $1}' || echo "N/A")
        echo -e "${GREEN}📊 File: $1${NC}"
        echo -e "${GREEN}├─ Size: $size${NC}"
        echo -e "${GREEN}└─ Lines: $lines${NC}"
    else
        echo -e "${RED}❌ File not found: $1${NC}"
    fi
}

find_files() {
    if [ -z "$1" ]; then
        echo -e "${RED}❌ Search pattern required${NC}"
        return 1
    fi
    
    echo -e "${BLUE}🔍 Searching for: *$1*${NC}"
    find . -name "*$1*" 2>/dev/null | head -20
}

create_directory() {
    if [ -z "$1" ]; then
        echo -e "${RED}❌ Directory name required${NC}"
        return 1
    fi
    
    mkdir -p "$1"
    echo -e "${GREEN}✅ Created directory: $1${NC}"
}

show_tree() {
    local dir=${1:-.}
    echo -e "${BLUE}🌳 Directory tree of $dir:${NC}"
    find "$dir" -type d | sed 's|[^/]*/|-|g' | head -30
}

# Main logic
case "$1" in
    list|ls)
        list_directory "$2"
        ;;
    size|info)
        get_file_size "$2"
        ;;
    find|search)
        find_files "$2"
        ;;
    copy|cp)
        if [ -z "$3" ]; then
            echo -e "${RED}❌ Source and destination required${NC}"
            exit 1
        fi
        cp "$2" "$3"
        echo -e "${GREEN}✅ Copied $2 to $3${NC}"
        ;;
    move|mv)
        if [ -z "$3" ]; then
            echo -e "${RED}❌ Source and destination required${NC}"
            exit 1
        fi
        mv "$2" "$3"
        echo -e "${GREEN}✅ Moved $2 to $3${NC}"
        ;;
    delete|rm|del)
        if [ -z "$2" ]; then
            echo -e "${RED}❌ File name required${NC}"
            exit 1
        fi
        rm -i "$2"
        ;;
    mkdir)
        create_directory "$2"
        ;;
    tree)
        show_tree "$2"
        ;;
    *)
        show_help
        ;;
esac