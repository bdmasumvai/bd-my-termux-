cat > bin/bdfiles << 'EOF'
#!/data/data/com.termux/files/usr/bin/bash

# BD File Manager Pro
# Professional File Management System

show_help() {
    echo "BD File Manager Pro"
    echo "==================="
    echo "Usage: bdfiles [command] [path]"
    echo ""
    echo "Commands:"
    echo "  list [dir]    List directory contents"
    echo "  size <file>   Show file size"
    echo "  find <name>   Find files"
    echo "  tree [dir]    Show directory tree"
    echo "  info <file>   File information"
}

list_directory() {
    local dir="${1:-.}"
    
    if [ ! -d "$dir" ]; then
        echo "‚ùå Directory not found: $dir"
        return 1
    fi
    
    echo "üìÅ Contents of: $dir"
    echo "=========================================="
    
    # List with colors and icons
    ls -la "$dir" | while read -r line; do
        if echo "$line" | grep -q "total "; then
            continue
        fi
        
        if echo "$line" | grep -q "^d"; then
            echo "üìÅ $line"
        elif echo "$line" | grep -q "^l"; then
            echo "üîó $line"
        elif echo "$line" | grep -q "^-..x"; then
            echo "‚ö° $line"
        else
            echo "üìÑ $line"
        fi
    done
    
    # Show summary
    file_count=$(find "$dir" -maxdepth 1 -type f | wc -l)
    dir_count=$(find "$dir" -maxdepth 1 -type d | wc -l)
    echo "=========================================="
    echo "üìä Summary: $file_count files, $((dir_count-1)) directories"
}

get_file_size() {
    if [ -z "$1" ]; then
        echo "‚ùå File name required"
        return 1
    fi
    
    if [ ! -f "$1" ]; then
        echo "‚ùå File not found: $1"
        return 1
    fi
    
    size=$(du -h "$1" | awk '{print $1}')
    lines=$(wc -l < "$1" 2>/dev/null || echo "N/A")
    
    echo "üìä File Information: $1"
    echo "Size:  $size"
    echo "Lines: $lines"
}

find_files() {
    if [ -z "$1" ]; then
        echo "‚ùå Search pattern required"
        return 1
    fi
    
    echo "üîç Searching for: $1"
    find . -name "*$1*" 2>/dev/null | head -15
}

show_tree() {
    local dir="${1:-.}"
    
    echo "üå≥ Directory Tree: $dir"
    if command -v tree >/dev/null 2>&1; then
        tree "$dir" -L 2
    else
        find "$dir" -type d | sed 's|[^/]*/|-|g' | head -20
    fi
}

file_info() {
    if [ -z "$1" ]; then
        echo "‚ùå File name required"
        return 1
    fi
    
    if [ ! -e "$1" ]; then
        echo "‚ùå File not found: $1"
        return 1
    fi
    
    echo "üìÑ File Information: $1"
    echo "=========================================="
    
    if [ -f "$1" ]; then
        echo "Type:     Regular File"
    elif [ -d "$1" ]; then
        echo "Type:     Directory"
    elif [ -L "$1" ]; then
        echo "Type:     Symbolic Link"
    fi
    
    echo "Size:     $(du -h "$1" | awk '{print $1}')"
    echo "Permissions: $(stat -c "%A" "$1" 2>/dev/null || echo "Unknown")"
    echo "Modified: $(stat -c "%y" "$1" 2>/dev/null | cut -d'.' -f1 || echo "Unknown")"
}

# Main command handler
case "${1}" in
    list|ls)
        list_directory "$2"
        ;;
    size)
        get_file_size "$2"
        ;;
    find)
        find_files "$2"
        ;;
    tree)
        show_tree "$2"
        ;;
    info)
        file_info "$2"
        ;;
    *)
        show_help
        ;;
esac
EOF

chmod +x bin/bdfiles